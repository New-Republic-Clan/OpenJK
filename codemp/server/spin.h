// List all Possible Wins

#define SPIN_VERSION "1.024";

typedef enum {
	WIN_BOWCASTER,
	WIN_DC15,
	WIN_SABER,
	WIN_WESTAR_PISTOL,
	WIN_FRAG_GRENADE,
	WIN_PULSE_GRENADE,
	WIN_DISRUPTOR,
	WIN_PROJECTILE,
	WIN_DC17,
	WIN_ROCKET_LAUNCHER,
	WIN_DLT,
	WIN_ARM_BLASTER,
	WIN_T21,
	WIN_100_ARMOR,
	WIN_250_ARMOR,
	WIN_JETPACK,
	WIN_CLOAK,
	WIN_EWEB,
	WIN_SENTRY,
	WIN_SEEKER,
	WIN_BACTA,
	WIN_FORCEFIELD,
	WIN_TAUN_TAUN,
	WIN_SWOOP,
	WIN_SPEEDER,
	WIN_DEWBACK,
	WIN_MECH,
	WIN_SIZE_XS,
	WIN_SIZE_S,
	WIN_FORCE_SENSITIVITY,
	WIN_FORCE_SPEED,
	WIN_FORCE_PUSH,
	WIN_FORCE_PULL,
	WIN_FORCE_LIGHTNING,
	WIN_FORCE_GRIP,
	WIN_FORCE_MINDTRICK,
	WIN_INVINCIBLE,
	WIN_100_HEALTH,
	WIN_250_HEALTH,
	WIN_NUM_WINS // MUST BE LAST AND IS NOT A REAL WIN
} spin_wins_t;


// Assign a default weight to the win (highier weight means more common)
// Spin Logic can be used to alter these weights depending on factors

int weights[]{ 
	50, //WIN_BOWCASTER,
	30, //WIN_DC15,
	50, //WIN_SABER,
	50, //WIN_WESTAR_PISTOL,
	50, //WIN_FRAG_GRENADE,
	50, //WIN_PULSE_GRENADE,
	50, //WIN_DISRUPTOR,
	50, //WIN_PROJECTILE,
	50, //WIN_DC17,
	30, //WIN_ROCKET_LAUNCHER,
	50, //WIN_DLT,
	50, //WIN_ARM_BLASTER,
	50, //WIN_T21,
	50, //WIN_100_ARMOR,
	30, //WIN_250_ARMOR,
	50, //WIN_JETPACK,
	40, //WIN_CLOAK,
	40, //WIN_EWEB,
	40, //WIN_SENTRY,
	40, //WIN_SEEKER,
	40, //WIN_BACTA,
	40, //WIN_FORCEFIELD,
	30, //WIN_TAUN_TAUN,
	30, //WIN_SWOOP,
	20, //WIN_SPEEDER,
	30, //WIN_DEWBACK,
	5,  //WIN_MECH,
	30, //WIN_SIZE_XS,
	50, //WIN_SIZE_S,
	50, //WIN_FORCE_SENSITIVITY,
	50, //WIN_FORCE_SPEED,
	50, //WIN_FORCE_PUSH,
	50, //WIN_FORCE_PULL,
	40, //WIN_FORCE_LIGHTNING,
	40, //WIN_FORCE_GRIP,
	40, //WIN_FORCE_MINDTRICK,
	10, //WIN_INVINCIBLE,
	50, //WIN_100_HEALTH,
	30  //WIN_250_HEALTH
};